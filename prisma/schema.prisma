generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int      @id @default(autoincrement())
  name       String   @db.VarChar(63)
  email      String   @db.VarChar(225)
  password   String   @db.VarChar(127)
  birthAt   DateTime? @db.Date
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  @@map("users")
}

model City {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200) @unique
  description   String?  @db.Text()
  geolocation   String?  @db.VarChar(20)
  youtube       String?  @db.VarChar(255)
  state         String?  @db.VarChar(255)
  photo         String?  @db.VarChar(60)
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  beaches Beach[]
  restaurants Restaurant[]
  @@map("cities")
}

model Beach {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200) @unique
  geolocation   String   @db.VarChar(200)
  youtube       String?  @db.VarChar(200)
  description   String?  @db.Text()
  directions    String?  @db.Text()
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  street        String?  @db.VarChar(200)
  neighborhood  String?  @db.VarChar(200)
  number        String?  @db.VarChar(10)
  additionalAddress String?  @db.Text()
  zipeCode String?       @db.VarChar(25)
  city     City?         @relation(fields: [cityId], references: [id])
  cityId    Int?
  @@map("beaches")
}

model RestaurantType {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200)
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  restaurants   RestaurantToRestaurantType[]
  @@map("restaurant_types")
}

model Restaurant {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200)
  description   String?  @db.Text()
  directions    String?  @db.Text()
  geolocation   String?  @db.VarChar(200)
  youtube       String?  @db.VarChar(200)
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  street        String?  @db.VarChar(200)
  neighborhood  String?  @db.VarChar(200)
  number        String?  @db.VarChar(10)
  additionalAddress String?  @db.Text()
  zipeCode String?       @db.VarChar(25)
  city     City?         @relation(fields: [cityId], references: [id])
  cityId    Int?
  phone  String?  @db.VarChar(50)
  photo  String?  @db.VarChar(50)
  instagram  String?  @db.VarChar(100)
  website  String?  @db.VarChar(255)
  restaurantTypes RestaurantToRestaurantType[]
  restaurantToServiceType RestaurantToServiceType[]
@@map("restaurants")

}

model RestaurantToRestaurantType {
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  restaurantType RestaurantType @relation(fields: [restaurantTypeId], references: [id])
  restaurantTypeId Int
  @@id([restaurantId, restaurantTypeId])
  @@map("restaurant_to_restaurant_types")
}

model AccommodationType {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200)
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  @@map("accommodation_types")
}

model ServiceType {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200)
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  @@map("service_types")
}

model RestaurantServiceType {
  id            Int      @id @default(autoincrement())
  name          String   @db.VarChar(200)
  status        Boolean  @default(true)
  created_at    DateTime @default(now()) @db.Timestamp(0)
  updated_at    DateTime @default(now()) @db.Timestamp(0)
  restaurants   RestaurantToServiceType[]
  @@map("restaurant_service_types")
}

model RestaurantToServiceType {
  restaurant   Restaurant @relation(fields: [restaurantId], references: [id])
  restaurantId Int
  restaurantServiceType RestaurantServiceType @relation(fields: [restaurantServiceTypeId], references: [id])
  restaurantServiceTypeId Int
  @@id([restaurantId, restaurantServiceTypeId])
  @@map("restaurant_to_service_types")
}
